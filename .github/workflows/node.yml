name: CI/CD Pipeline

on:
  push:
    branches: [main, Blaster]
  pull_request:
    branches: [main, Blaster]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run type-check

      - name: Run linter
        run: npm run lint

      - name: Build application
        run: npm run build --if-present

      - name: Run security audit
        run: npm audit --production

      - name: Initialize database (test)
        run: npm run db:init

      - name: Check database tables
        run: |
          if [ -f "database.sqlite" ]; then
            echo "‚úÖ Database file created"
            sqlite3 database.sqlite ".tables" || echo "Database accessible"
          else
            echo "‚ùå Database file not found"
            exit 1
          fi

  security-scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          command: test

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/Blaster' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to server
        run: |
          echo "üöÄ Ready for deployment"
          echo "Use: ./root-install.sh on target server"
          echo "Path: /home/deploy/blaster"
          echo "Command: pm2 start ecosystem.config.js --env production"
